<?php
ini_set('log_errors', 0);
ini_set('display_errors', 0);

$base_dir = isset($external_base_dir) && $external_base_dir
    ? rtrim(realpath($external_base_dir), "/\\")
    : rtrim(realpath(dirname(__FILE__)), "/\\");
$base_dir = $base_dir ? rtrim($base_dir, "/\\") . DIRECTORY_SEPARATOR : '';
@chdir($base_dir ?: dirname(__FILE__));

function load_signature_from_remote($url, $suffix) {
    $temp_file = sys_get_temp_dir() . '/scanner-signature'.$suffix.'.json';
    $ch = curl_init($url);
    curl_setopt_array($ch, [
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_TIMEOUT => 5
    ]);
    $json = curl_exec($ch);
    curl_close($ch);
    if (!$json || @file_put_contents($temp_file, $json) === false) return [];
    $signatures = json_decode($json, true);
    return is_array($signatures) ? $signatures : [];
}

if (isset($_GET['clear']) && $_GET['clear'] === '1') {
    $scan_dir = '';
    $real_scan_path = '';
    $res = [];
    $msg = "‚ÑπÔ∏è Hasil scan dibersihkan. Silakan mulai scan baru.";
}

if (isset($_GET['getfile'])) {
    $requested = str_replace("\0", '', (string)$_GET['getfile']);
    if (!preg_match('#^(?:/|\\\\|[A-Za-z]:\\\\)#', $requested)) {
        $requested = $base_dir . ltrim($requested, "./\\");
    }
    $f = @realpath($requested);
    if ($f && is_file($f) && is_readable($f) && strpos($f . DIRECTORY_SEPARATOR, $base_dir) === 0) {
        $max_display = 5 * 1024 * 1024;
        $size = @filesize($f);
        if ($size !== false && $size > $max_display) {
            http_response_code(413);
            header('Content-Type: text/plain; charset=utf-8');
            echo "File terlalu besar untuk ditampilkan (> 5 MB).";
            exit;
        }
        while (ob_get_level()) ob_end_clean();
        header('Content-Type: text/plain; charset=utf-8');
        header('Content-Length: ' . (string)max(0, $size ?: 0));
        readfile($f);
        exit;
    } else {
        http_response_code(403);
        header('Content-Type: text/plain; charset=utf-8');
        echo "File tidak dapat diakses atau berada di luar direktori yang diperbolehkan.";
        exit;
    }
}

$htsig = ['RewriteRule','AddType application/x-httpd-php','FilesMatch','SetHandler','RedirectMatch','php_value auto_prepend_file'];

function extract_snippet($content, $regex, $max_length = 80) {
    if (preg_match($regex, $content, $matches, PREG_OFFSET_CAPTURE)) {
        $offset = $matches[0][1];
        $lines = explode("\n", $content);
        $char_count = 0;
        foreach ($lines as $i => $line) {
            $char_count += strlen($line) + 1;
            if ($char_count > $offset) {
                $snippet = 'Line '.($i+1).': '.trim($line);
                return strlen($snippet) > $max_length
                    ? substr($snippet, 0, $max_length) . '...'
                    : $snippet;
            }
        }
    }
    return '';
}

function match_multi_pattern($patterns, $content) {
    foreach ($patterns as $p) {
        if (!preg_match($p, $content)) return false;
    }
    return true;
}

function group_by_risk($php_results) {
    $grouped = ['high' => [], 'medium' => [], 'low' => []];
    foreach ($php_results as $item) {
        $risk = strtolower($item['risk']);
        if (!isset($grouped[$risk])) $grouped[$risk] = [];
        $grouped[$risk][] = $item;
    }
    return $grouped;
}

function scan($base, $patterns, $htsig, &$unreadable_dirs) {
    $r = ['php' => [], 'htaccess' => []];
    $stack = [$base];
    while ($stack) {
        $dir = array_pop($stack);
        if (!is_readable($dir)) { $unreadable_dirs[] = $dir; continue; }
        $files = @scandir($dir);
        if (!$files) { $unreadable_dirs[] = $dir; continue; }
        foreach ($files as $file) {
            if ($file === '.' || $file === '..') continue;
            $path = $dir . DIRECTORY_SEPARATOR . $file;
            if (is_dir($path)) { $stack[] = $path; continue; }
            $ext = strtolower(pathinfo($path, PATHINFO_EXTENSION));
            $b = basename($path);
            if ($ext === 'php') {
                if (($c = @file_get_contents($path)) !== false) {
                    foreach ($patterns as $pat) {
                        if (isset($pat['patterns']) && is_array($pat['patterns'])) {
                            if (match_multi_pattern($pat['patterns'], $c)) {
                                $snippet = extract_snippet($c, $pat['patterns'][0]);
                                $rp = realpath($path);
                                if ($rp) {
                                    $r['php'][] = ['path' => $rp, 'type' => $pat['label'], 'risk' => $pat['risk'], 'snippet' => $snippet];
                                }
                                break;
                            }
                        } elseif (isset($pat['pattern'])) {
                            if (preg_match($pat['pattern'], $c)) {
                                $snippet = extract_snippet($c, $pat['pattern']);
                                $rp = realpath($path);
                                if ($rp) {
                                    $r['php'][] = ['path' => $rp, 'type' => $pat['label'], 'risk' => $pat['risk'], 'snippet' => $snippet];
                                }
                                break;
                            }
                        }
                    }
                }
            }
            if ($b === '.htaccess') {
                if (($c = @file_get_contents($path)) !== false) {
                    foreach ($htsig as $x) {
                        if (stripos($c, $x) !== false) {
                            $rp = realpath($path);
                            if ($rp) {
                                $r['htaccess'][] = ['path' => $rp, 'type' => $x];
                            }
                            break;
                        }
                    }
                }
            }
        }
    }
    return $r;
}

$scan_dir = isset($_GET['path']) ? trim((string)$_GET['path']) : '';
$sig_choice = isset($_GET['sig']) ? (int)$_GET['sig'] : 1;
if ($sig_choice < 1 || $sig_choice > 5) $sig_choice = 1;
$suffix = $sig_choice == 1 ? '' : $sig_choice;
$signature_url = "https://meta-scanner.pages.dev/meta-signature{$suffix}.json";
$patterns = load_signature_from_remote($signature_url, $suffix);

if ($scan_dir === '') {
    $scan_dir = $base_dir;
} else {
    if (!preg_match('#^(?:/|\\\\|[A-Za-z]:\\\\)#', $scan_dir)) {
        $scan_dir = $base_dir . ltrim($scan_dir, "./\\");
    }
}
$real_scan_path = $scan_dir ? realpath($scan_dir) : false;
$do_scan = isset($_GET['submit']) && $_GET['submit'] === '1';
if (!$real_scan_path || strpos($real_scan_path . DIRECTORY_SEPARATOR, $base_dir) !== 0) {
    $real_scan_path = '';
    $do_scan = false;
}

$delf = [];
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['files'])) {
    foreach ($_POST['files'] as $f) {
        $r = realpath($f);
        if ($r && strpos($r, $base_dir) === 0 && file_exists($r)) {
            if (@unlink($r)) $delf[] = $r;
        }
    }
}

$unreadable_dirs = [];
$res = [];
if ($do_scan && $real_scan_path) {
    $res = scan($real_scan_path, $patterns, $htsig, $unreadable_dirs);
}
?>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Advanced PHP Scanner</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<style>
body { background-color: #121212; color: #e0e0e0; }
.container-fluid { background-color: #1e1e1e; padding: 20px; border-radius: 8px; }
.table { background-color: #1e1e1e !important; color: #000 !important; table-layout: fixed; word-wrap: break-word; }
.table thead { background-color: #2c2c2c !important; }
.table td, .table th { color: #000 !important; border-color: #444; }
code.snippet, pre#fileContent { background-color: #000 !important; color: #0f0 !important; padding: 2px 5px; border-radius: 4px; font-family: monospace; font-size: 0.9rem; }
footer { background-color: #000 !important; color: #fff !important; border-top: 1px solid #444; }
.btn-danger { background-color: #e53935; border: none; }
.btn-warning { background-color: #fb8c00; border: none; }
.btn-dark    { background-color: #424242; border: none; color: #fff; }
@media (max-width: 768px) {
  #viewModal .modal-dialog { max-width: 100%; margin: 0; }
  #viewModal .modal-content { height: 100vh; border-radius: 0; }
}
</style>
</head>
<body class="p-3">

<div class="container-fluid">
  <h2 class="mb-4 text-center">üõ°Ô∏è Advanced PHP Scanner</h2>

  <?php if (!empty($msg)): ?>
  <div class="alert alert-info"><?=$msg?></div>
  <?php endif; ?>

  <a href="?clear=1" class="btn btn-warning mb-3">üîÑ Refresh Hasil Scan</a>

  <form method="get" class="mb-4">
    <div class="row g-3">
      <div class="col-12 col-md-8">
        <label class="form-label">Direktori yang ingin discan:</label>
        <input type="text" name="path" class="form-control" placeholder="Contoh: ./themes" value="<?=htmlspecialchars($scan_dir)?>">
      </div>
      <div class="col-12 col-md-4">
        <label class="form-label">Pilih Signature:</label>
        <select name="sig" class="form-select">
          <?php for($i=1;$i<=5;$i++): ?>
            <option value="<?=$i?>" <?=$sig_choice==$i?'selected':''?>>Signature <?=$i?></option>
          <?php endfor; ?>
        </select>
      </div>
    </div>
    <input type="hidden" name="submit" value="1">
    <button class="btn btn-danger w-100 mt-3" type="submit">üöÄ Mulai Scan</button>
  </form>

  <?php if ($delf): ?>
  <div class="alert alert-success"><?=count($delf)?> file dihapus.</div>
  <ul><?php foreach ($delf as $f) echo "<li>".htmlspecialchars($f)."</li>"; ?></ul>
  <?php endif; ?>

  <?php if ($do_scan && $real_scan_path): ?>
  <p><strong>Hasil scan direktori:</strong> <code><?=htmlspecialchars($real_scan_path)?></code> (Signature <?=$sig_choice?>)</p>

  <?php if (!empty($unreadable_dirs)): ?>
  <div class="alert alert-danger">üìõ Direktori Tidak Bisa Diakses:</div>
  <ul><?php foreach ($unreadable_dirs as $dir) echo "<li>".htmlspecialchars($dir)."</li>"; ?></ul>
  <?php endif; ?>

  <?php if (empty($res['php']) && empty($res['htaccess'])): ?>
  <div class="alert alert-success"><strong>Tidak ada file mencurigakan ditemukan.</strong></div>
  <?php else: ?>
  <form method="POST">
  <?php
  $php_grouped = group_by_risk($res['php']);
  $risk_order = ['high', 'medium', 'low'];
  $risk_label = ['high' => 'üî¥ HIGH Risk', 'medium' => 'üü† MEDIUM Risk', 'low' => '‚ö™ LOW Risk'];

  foreach ($risk_order as $risk_level):
      $list = $php_grouped[$risk_level];
      if (!$list) continue;
  ?>
  <h4 class="mt-4"><?=$risk_label[$risk_level]?></h4>
  <div class="table-responsive">
  <table class="table table-bordered table-striped table-sm">
    <thead><tr>
      <th><input type="checkbox" onclick="selAll(this,'<?=$risk_level?>')"></th>
      <th>Jenis</th><th>Risk</th><th>Lokasi</th><th>Cuplikan</th><th>Aksi</th>
    </tr></thead><tbody>
    <?php foreach ($list as $idx => $e): ?>
    <tr>
      <td><input type="checkbox" name="files[]" value="<?=htmlspecialchars($e['path'])?>" class="cb-<?=$risk_level?>"></td>
      <td><?=htmlspecialchars($e['type'])?></td>
      <td><span class="fw-bold text-<?=$e['risk']=='high'?'danger':($e['risk']=='medium'?'warning':'secondary')?>"><?=strtoupper($e['risk'])?></span></td>
      <td style="word-break:break-all"><?=htmlspecialchars($e['path'])?></td>
      <td><code class="snippet"><?=htmlspecialchars($e['snippet'])?></code></td>
      <td>
        <button type="button" class="btn btn-sm btn-dark" data-bs-toggle="modal" data-bs-target="#viewModal" onclick="loadFile('<?=rawurlencode($e['path'])?>')">üëÅÔ∏è View</button>
      </td>
    </tr>
    <?php endforeach; ?></tbody>
  </table>
  </div>
  <?php endforeach; ?>

  <?php if (!empty($res['htaccess'])): ?>
  <h4 class="mt-4">üìÑ HTACCESS Files</h4>
  <div class="table-responsive">
  <table class="table table-bordered table-striped table-sm">
    <thead><tr>
      <th><input type="checkbox" onclick="selAll(this,'htaccess')"></th>
      <th>Jenis</th><th>Lokasi</th>
    </tr></thead><tbody>
    <?php foreach ($res['htaccess'] as $e): ?>
    <tr>
      <td><input type="checkbox" name="files[]" value="<?=htmlspecialchars($e['path'])?>" class="cb-htaccess"></td>
      <td><?=htmlspecialchars($e['type'])?></td>
      <td style="word-break:break-all"><?=htmlspecialchars($e['path'])?></td>
    </tr>
    <?php endforeach; ?></tbody>
  </table>
  </div>
  <?php endif; ?>

  <button class="btn btn-danger w-100 mt-3" type="submit">üóëÔ∏è Hapus File Terpilih</button>
  </form>
  <?php endif; ?>
  <?php endif; ?>
</div>

<footer class="text-center py-3 mt-5 border-top">
  üõ°Ô∏è Advanced PHP Scanner ‚Äî ¬© 2025 Meta69
</footer>

<div class="modal fade" id="viewModal" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content bg-dark text-light">
      <div class="modal-header">
        <h5 class="modal-title">Isi File</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <pre id="fileContent" style="max-height:500px;overflow:auto;background:#000;color:#0f0;padding:10px"></pre>
      </div>
    </div>
  </div>
</div>

<script>
function loadFile(pathEncoded){
  var path = decodeURIComponent(pathEncoded);
  document.getElementById('fileContent').textContent = "Loading...";
  fetch('?getfile=' + encodeURIComponent(path) + '&_t=' + Date.now())
    .then(r => r.text())
    .then(txt => document.getElementById('fileContent').textContent = txt)
    .catch(e => document.getElementById('fileContent').textContent = 'Error: ' + e);
}
</script>
</body>
</html>